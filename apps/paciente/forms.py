
from django import forms
from apps.paciente.models import Candidato, Dprevio, Medico, Ingreso, Radiologia, Uci, Neurologia, Bold, Mayor, \
    Informante, Seguimiento, Control, Moca


class MedicoForm(forms.ModelForm):

    class Meta:
        model = Medico
        fields = ['nombre',]
        labels = {'nombre': "Nombre",}
        widgets = {'nombre': forms.TextInput(attrs={'class': 'form-control','oninput':"this.value = this.value.replace(/[^a-zA-ZñÑ\sáéíóúüàè]/, '')", 'autocomplete' :"off",'placeholder': ('Nombre')}),}


class PacienteForm(forms.ModelForm):


    class Meta:
        model = Candidato

        fields = [
            'nombres',
            'apellidos',
            'fecha_nacimiento',
            'cc',
            'sexo',
            'fecha_de_registro',
            'HC',
            'cama_numero',
            'fecha_evento_principal',
            'hora_evento_principal',
            'fecha_hora_ingreso',
            'G_diagnostico',
            'D_neuro_logico_psiquiatrico_previo',
            'D_especificos',
            'ci',
            'ci3',
            'ci4',
            'ce1',
            'ce2',
            'ce3',
            'ce4',
            'medico_responsable',
            'archivo',
            'imagen',


        ]

        labels = {
            'nombres': 'Nombres*',
            'apellidos': 'Apellidos*',
            'fecha_nacimiento': 'Fecha de nacimiento*',
            'cc': 'C.C*',
            'sexo': 'Sexo*',

            'fecha_de_registro' : "Fecha de Registro*",
            'HC': "Historia Clinica*",
            'cama_numero': 'Cama UCI*',
            'fecha_evento_principal': "Fecha de evento principal*",
            'hora_evento_principal': "Hora de evento principal",
            'fecha_hora_ingreso': "Fecha y Hora de ingreso UCI*",
            'G_diagnostico': 'Grupo diagnóstico*',
            'D_neuro_logico_psiquiatrico_previo': "Antecedentes neurológicos/psiquiátricos",
            'D_especificos': 'Especifique diagnóstico*',
            'medico_responsable': "Profesional Responsable*",
            'archivo': "Documento fisico",
            'imagen': "Archivo*",
             }
        widgets = {
            'nombres': forms.TextInput(attrs={'class': 'form-control', 'autocomplete' :"off", 'placeholder': ('Nombres')}),
            'apellidos': forms.TextInput(attrs={'class': 'form-control', 'autocomplete' :"off", 'placeholder': ('Apellidos')}),
            'fecha_nacimiento': forms.TextInput(attrs={'class': 'form-control'}),
            'cc': forms.TextInput(attrs={'class': 'form-control', 'autocomplete' :"off", 'placeholder': ('Cédula de Ciudadanía')}),
            'sexo': forms.Select(attrs={'class': 'form-control'}),

            'fecha_de_registro': forms.TextInput(attrs={'class': 'form-control'}),
            'HC':forms.TextInput(attrs={'class': 'form-control', 'autocomplete' :"off", 'placeholder': ('Historia clínica número')}),
            'cama_numero': forms.TextInput(attrs={'class': 'form-control', 'placeholder': ('Ingrese número entero')}),
            'fecha_evento_principal': forms.TextInput(attrs={'class': 'form-control'}),
            'hora_evento_principal': forms.TextInput(attrs={'class': 'form-control', 'placeholder': ('Formato 24 horas')}),
            'fecha_hora_ingreso': forms.TextInput(attrs={'class': 'form-control'}),
            'G_diagnostico': forms.Select(attrs={'class': 'form-control'}),
            'D_neuro_logico_psiquiatrico_previo': forms.SelectMultiple(attrs={'class': 'form-control'}),
            'D_especificos': forms.Textarea(attrs={'class': 'form-control', 'autocomplete' :"off"}),
            'ci': forms.Select(attrs={'class': 'form-control', 'required':'true'}),
            'ci3': forms.CheckboxInput(),
            'ci4': forms.CheckboxInput(),
            'ce1': forms.CheckboxInput(),
            'ce2': forms.CheckboxInput(),
            'ce3': forms.CheckboxInput(),
            'ce4': forms.CheckboxInput(),
            'medico_responsable': forms.Select(attrs={'class': 'form-control'}),
            'archivo': forms.ClearableFileInput(attrs={'accept':'application/pdf'}),
            'imagen': forms.ClearableFileInput(),


        }

class IngresoForm(forms.ModelForm):


    class Meta:
        model = Ingreso

        fields = [
            'fecha_form',
            'lugar_nacimiento',
            'lugar_residencia',
            'direccion',
            'nombre_acompanante',
            'tel1',
            'tel2',
            'peso',
            'estatura',
            'n_educativo',
            'lateralidad',
            'conciencia',
            'sedado',
            'a_patologicos',
            'a_patologicos_cual',
            'fecha_craneotomia',
            'causa_quirurgicos',
            'a_toxico_alergenicos',
            'a_farmaco1',
            'a_farmaco1_dosis',
            'a_farmaco2',
            'a_farmaco2_dosis',
            'a_familiares',
            'firma_consentimiento',
            'firma_causa',
            'fechafirma',
            'archivo',
            'archivofirma',


        ]

        labels = {
            'fecha_form':"Fecha*",
            'lugar_nacimiento':"Lugar de nacimiento*",
            'lugar_residencia': "Lugar de residencia*",
            'direccion':"Dirección",
            'nombre_acompanante':"Nombre Acompañante*",
            'tel1': "Teléfono de contacto 1*",
            'tel2': "Teléfono de contacto 2",
            'peso': "Peso (Kg)*",
            'estatura':"Estatura (cms)*",
            'n_educativo':"Nivel Educativo*",
            'lateralidad':"Lateralidad*",
            'conciencia':"Estado de Conciencia*",
            'sedado': "Sedado por neuroprotección",
            'a_patologicos':"Antecedentes Patológicos",
            'a_patologicos_cual': "Especifique el antecedente patológico adicional*",
            'causa_quirurgicos':"Especifique causa*",
            'fecha_craneotomia':"Fecha*",
            'a_toxico_alergenicos':"Antecedentes Tóxico alérgicos",
            'a_farmaco1': "Antecedentes Farmacológicos 1",
            'a_farmaco1_dosis':"Dosis total/día*",
            'a_farmaco2': "Antecedentes Farmacológicos 2",
            'a_farmaco2_dosis':"Dosis total/día*",
            'a_familiares':"Antecedentes Familiares relevantes",
            'firma_consentimiento':"Firma de consentimiento informado",
            'firma_causa':"Causa*",
            'fechafirma':'Fecha*',
            'archivo': "Documento fisico",

             }
        widgets = {
            'fecha_form': forms.TextInput(attrs={'class': 'form-control', 'placeholder': ('Fecha cuando se llena este formulario')}),
            'lugar_nacimiento': forms.TextInput(attrs={'class': 'form-control'}),
            'lugar_residencia': forms.TextInput(attrs={'class': 'form-control'}),
            'direccion': forms.TextInput(attrs={'class': 'form-control', 'autocomplete' :"off" ,'placeholder': ('Escriba la dirección de residencia (opcional)')}),
            'nombre_acompanante': forms.TextInput(attrs={'class': 'form-control', 'autocomplete' :"off"}),
            'tel1': forms.TextInput(attrs={'class': 'form-control', 'autocomplete' :"off"}),
            'tel2': forms.TextInput(attrs={'class': 'form-control', 'autocomplete' :"off"}),
            'peso': forms.TextInput(attrs={'class': 'form-control', 'autocomplete' :"off", 'placeholder': ('Peso en Kilogramos')}),
            'estatura': forms.TextInput(attrs={'class': 'form-control', 'autocomplete' :"off", 'placeholder': ('Estatura en centimetros')}),
            'n_educativo': forms.Select(attrs={'class': 'form-control'}),
            'lateralidad': forms.Select(attrs={'class': 'form-control'}),
            'conciencia': forms.Select(attrs={'class': 'form-control'}),
            'sedado': forms.CheckboxInput(),
            'a_patologicos': forms.SelectMultiple(attrs={'class': 'form-control'}),
            'a_patologicos_cual': forms.TextInput(attrs={'class': 'form-control'}),
            'fecha_craneotomia':forms.TextInput(attrs={'class': 'form-control', 'placeholder': ('Si se escoge craneotomía')}),
            'causa_quirurgicos': forms.TextInput(attrs={'class': 'form-control', 'autocomplete' :"off"}),
            'a_toxico_alergenicos': forms.TextInput(attrs={'class': 'form-control', 'autocomplete' :"off", 'placeholder': ('Deje en blanco si no se cumple')}),
            'a_farmaco1': forms.TextInput(attrs={'class': 'form-control', 'autocomplete' :"off", 'maxlength':40}),
            'a_farmaco1_dosis': forms.TextInput(attrs={'class': 'form-control', 'autocomplete' :"off"}),
            'a_farmaco2': forms.TextInput(attrs={'class': 'form-control', 'autocomplete' :"off"}),
            'a_farmaco2_dosis': forms.TextInput(attrs={'class': 'form-control', 'autocomplete' :"off"}),
            'a_familiares': forms.TextInput(attrs={'class': 'form-control', 'autocomplete' :"off", 'placeholder': ('Deje en blanco si no se cumple')}),
            'firma_consentimiento': forms.CheckboxInput(),
            'firma_causa': forms.TextInput(attrs={'class': 'form-control', 'autocomplete' :"off", 'placeholder': ('Si no se firma')}),
            'fechafirma': forms.TextInput(attrs={'class': 'form-control', 'placeholder': ('Fecha firma consentimiento')}),
            'archivo': forms.ClearableFileInput(attrs={'accept': 'application/pdf'}),
            'archivofirma': forms.ClearableFileInput(attrs={'accept': 'application/pdf'}),
        }

class RadiologiaForm(forms.ModelForm):


    class Meta:
        model = Radiologia

        fields = [
            'fecha_procedimiento',
            'radiologo',
            'hora_inicio',
            'ur_pulsoximetro_sv',
            'ur_frecuencia_cardiaca_sv',
            'ur_frecuencia_respiratoria_sv',
            'ur_visoscopio_sv',
            'ur_tension_sv',
            'monitoreo',
            'pic',
            'ppc',
            'me_cual',
            'me_dosis',
            'sedacion',
            'sedacion_dt',
            'sedacion_sv',
            'analgesia',
            'analgesia_dt',
            'analgesia_sv',
            'relajacion',
            'relajacion_dt',
            'relajacion_sv',
            'svadicional1',
            'svadicional2',
            'otra_medicacion',
            'otra_medicacion_dt',
            'otra_medicacion_cual',
            'ru_pulsoximetro_sv',
            'ru_frecuencia_cardiaca_sv',
            'ru_frecuencia_respiratoria_sv',
            'ru_visoscopio_sv',
            'ru_tension_sv',
            'tiempo_sesonacia',
            'hora_llegada',
            'complicaciones_cuales',
            'transportable',
            'jefe_enfermeria',
            'aux_enfermeria',
            'medico_uci',
            'anestesiologo',
            'terapeuta_respiratorio',
            'vmi',
            'vasopresor',
            'ionotropico',
            'ur_pulsoximetro',
            'ur_frecuencia_cardiaca',
            'ur_frecuencia_respiratoria',
            'ur_visoscopio',
            'ur_tension',
            'medicamentos_emergencia',
            'ru_pulsoximetro',
            'ru_frecuencia_cardiaca',
            'ru_frecuencia_respiratoria',
            'ru_visoscopio',
            'ru_tension',
            'complicaciones',
        ]

        labels = {
            'fecha_procedimiento':'Fecha de procedimiento',
            'radiologo':"Anestesiólogo",
            'hora_inicio':"Hora inicio",
            'pic':"#PIC",
            'ppc':'#PPC',
            'me_cual':"Cuál",
            'me_dosis':"Dosis Total",
            'sedacion_dt':"Dosis Total",
            'analgesia_dt':"Dosis Total",
            'relajacion_dt': "Dosis Total",
            'otra_medicacion_dt':"Dosis Total",
            'otra_medicacion_cual':"Cuál",
            'tiempo_sesonacia': "Tiempo de resonancia",
            'hora_llegada' :"Hora de llegada a UCI",
            'complicaciones_cuales':"Cuales",


             }
        widgets = {
            'fecha_procedimiento':forms.TextInput(attrs={'class': 'form-control', 'placeholder': ('Fecha de procedimiento')}),
            'radiologo':forms.Select(attrs={'class': 'form-control'}),
            'hora_inicio': forms.TextInput(attrs={'class': 'form-control', 'placeholder': ('Formato 24 horas')}),
            'ur_pulsoximetro_sv':forms.TextInput(attrs={'class': 'form-control', 'placeholder': ('%'), 'oninput':"this.value = this.value.replace(/[^0-9]/, '')"}),
            'ur_frecuencia_cardiaca_sv':forms.TextInput(attrs={'class': 'form-control', 'placeholder': ('latidos/min'), 'oninput':"this.value = this.value.replace(/[^0-9]/, '')"}),
            'ur_frecuencia_respiratoria_sv':forms.TextInput(attrs={'class': 'form-control', 'placeholder': ('respiraciones/min'), 'oninput':"this.value = this.value.replace(/[^0-9]/, '')"}),
            'ur_visoscopio_sv':forms.TextInput(attrs={'class': 'form-control', 'placeholder': ('')}),
            'ur_tension_sv':forms.TextInput(attrs={'class': 'form-control', 'placeholder': ('mmhg'), 'oninput':"this.value = this.value.replace(/[^0-9/]/, '')"}),
            'monitoreo':forms.Select(attrs={'class': 'form-control', 'placeholder': ('')}),
            'pic': forms.TextInput(attrs={'class': 'form-control', 'placeholder': ('')}),
            'ppc': forms.TextInput(attrs={'class': 'form-control', 'placeholder': ('')}),
            'me_cual': forms.TextInput(attrs={'class': 'form-control', 'autocomplete' :"off", 'placeholder': ('Solo si se selecciona SI')}),
            'me_dosis': forms.TextInput(attrs={'class': 'form-control', 'autocomplete' :"off", 'placeholder': ('')}),

            'sedacion_dt':forms.TextInput(attrs={'class': 'form-control', 'placeholder': ('')}),
            'sedacion_sv':forms.TextInput(attrs={'class': 'form-control', 'placeholder': ('%'), 'oninput':"this.value = this.value.replace(/[^0-9]/, '')"}),
            'analgesia_dt':forms.TextInput(attrs={'class': 'form-control', 'placeholder': ('')}),
            'analgesia_sv':forms.TextInput(attrs={'class': 'form-control', 'placeholder': ('latidos/min'), 'oninput':"this.value = this.value.replace(/[^0-9]/, '')"}),
            'relajacion_dt': forms.TextInput(attrs={'class': 'form-control', 'placeholder': ('')}),
            'relajacion_sv': forms.TextInput(attrs={'class': 'form-control', 'placeholder': ('respiraciones/min'), 'oninput':"this.value = this.value.replace(/[^0-9]/, '')"}),
            'svadicional1': forms.TextInput(attrs={'class': 'form-control', 'placeholder': ('')}),
            'svadicional2': forms.TextInput(attrs={'class': 'form-control', 'placeholder': ('mmhg'), 'oninput':"this.value = this.value.replace(/[^0-9/]/, '')"}),
            'otra_medicacion_dt':forms.TextInput(attrs={'class': 'form-control', 'placeholder': ('')}),
            'otra_medicacion_cual':forms.TextInput(attrs={'class': 'form-control', 'placeholder': ('Solo si se selecciona SI')}),
            'ru_pulsoximetro_sv':forms.TextInput(attrs={'class': 'form-control', 'placeholder': ('%'), 'oninput':"this.value = this.value.replace(/[^0-9]/, '')"}),
            'ru_frecuencia_cardiaca_sv':forms.TextInput(attrs={'class': 'form-control', 'placeholder': ('latidos/min'), 'oninput':"this.value = this.value.replace(/[^0-9]/, '')"}),
            'ru_frecuencia_respiratoria_sv':forms.TextInput(attrs={'class': 'form-control', 'placeholder': ('respiraciones/min'), 'oninput':"this.value = this.value.replace(/[^0-9]/, '')"}),
            'ru_visoscopio_sv':forms.TextInput(attrs={'class': 'form-control', 'placeholder': ('')}),
            'ru_tension_sv':forms.TextInput(attrs={'class': 'form-control', 'placeholder': ('mmhg'), 'oninput':"this.value = this.value.replace(/[^0-9/]/, '')"}),
            'tiempo_sesonacia':forms.TextInput(attrs={'class': 'form-control', 'placeholder': ('')}),
            'hora_llegada':forms.TextInput(attrs={'class': 'form-control', 'placeholder': ('Formato 24 horas')}),
            'complicaciones_cuales':forms.TextInput(attrs={'class': 'form-control', 'placeholder': ('Solo si se selecciona Si')}),

            'transportable':forms.RadioSelect(),
            'jefe_enfermeria': forms.RadioSelect(),
            'aux_enfermeria': forms.RadioSelect(),
            'medico_uci': forms.RadioSelect(),
            'anestesiologo':forms.RadioSelect(),
            'terapeuta_respiratorio':forms.RadioSelect(),
            'vmi':forms.RadioSelect(),
            'vasopresor':forms.RadioSelect(),
            'ionotropico':forms.RadioSelect(),
            'ur_pulsoximetro':forms.RadioSelect(),
            'ur_frecuencia_cardiaca':forms.RadioSelect(),
            'ur_frecuencia_respiratoria':forms.RadioSelect(),
            'ur_visoscopio':forms.RadioSelect(),
            'ur_tension':forms.RadioSelect(),
            'medicamentos_emergencia':forms.RadioSelect(),
            'sedacion':forms.RadioSelect(),
            'analgesia':forms.RadioSelect(),
            'relajacion':forms.RadioSelect(),
            'otra_medicacion':forms.RadioSelect(),
            'ru_pulsoximetro':forms.RadioSelect(),
            'ru_frecuencia_cardiaca':forms.RadioSelect(),
            'ru_frecuencia_respiratoria':forms.RadioSelect(),
            'ru_visoscopio':forms.RadioSelect(),
            'ru_tension':forms.RadioSelect(),
            'complicaciones':forms.RadioSelect(),

        }

class UciForm(forms.ModelForm):

    class Meta:
        model = Uci

        fields = [
            'fechauci',
            'horauci',
            'apertura_ocular',
            'respuesta_motora',
            'respuesta_verbal',
            'glasgowtotal',
            'fallaorganica',
            'fallaorganica_cual',

            'sepsis',
            'presion_intracraneana',
            'monitoria_pic',
            'ventilacionmecanica',
            'soportevasopresor',
            'noradrenalina',
            'vasopresina',
            'adrenalina',
            'midazolan',
            'midazolan_dt',
            'tiopental',
            'tiopental_dt',
            'dexmedetomidina',
            'dexmedetomidina_dt',
            'morfina',
            'morfina_dt',
            'hidromorfona',
            'hidromorfona_dt',
            'fentanyl',
            'fentanyl_dt',
            'fenitoina',
            'fenitoina_dt',
            'topiramato',
            'topiramato_dt',
            'acido_valproico',
            'acido_valproico_dt',
            'levetiracetam',
            'levetiracetam_dt',
            'lacosamida',
            'lacosamida_dt',
            'clozapina',
            'clozapina_dt',
            'haloperidol',
            'haloperidol_dt',
            'ketiapina',
            'ketiapina_dt',
            'carbamacepina',
            'carbamacepina_dt',
            'carbonato_litio',
            'carbonato_litio_dt',
            'valorable_neuro',
            'valorable_neuro_causa',
            'continua_studio',
            'fechaegreso',
            'horaegreso',
            'condicion_egreso',
            'dx_egreso',
            'causa_mortalidad',
            'fechamortalidad',
            'horamortalidad',
            'apertura_ocular_e',
            'respuesta_motora_e',
            'respuesta_verbal_e',
            'glasgowtotal_e',
        ]

        labels = {
            'fechauci': "Fecha",
            'horauci':"Hora",
            'apertura_ocular':"Apertura ocular",
            'respuesta_motora':"Respuesta motora",
            'respuesta_verbal':"Respuesta verbal",
            'glasgowtotal':"Glasgow total",
             'fallaorganica':"Falla orgánica",
             'fallaorganica_cual':"Cuál",

             'sepsis':"Sepsis",
             'presion_intracraneana':'Presión intracraneana',
             'monitoria_pic':'Monitoría PIC',
             'ventilacionmecanica':'Ventilación mecánica',
             'soportevasopresor':'Soporte vasopresor',
             'noradrenalina':'Noradrenalina >0.5 Mcg Kg Min',
             'vasopresina':'Vasopresina >2UI IV Hora',
             'adrenalina':'Adrenalina',
             'midazolan':'Midazolam',
             'tiopental':'Tiopental',
             'dexmedetomidina':'Dexmedetomidina',
             'morfina':'Morfina',
             'hidromorfona':'Hidromorfona',
             'fentanyl':'Fentanyl',
             'fenitoina':'Fenitoina',
             'topiramato':'Topiramato',
             'acido_valproico':'Acido valproico',
             'levetiracetam':'Levetiracetam',
             'lacosamida':'Lacosamida',
             'clozapina':'Clozapina',
             'haloperidol':'Haloperidol',
             'ketiapina':'Ketiapina',
             'carbamacepina':'Carbamacepina',
             'carbonato_litio':'Carbonato de Litio',
             'valorable_neuro':'Valorable por Neurología',
             'valorable_neuro_causa':'Causa',
             'continua_studio':'Paciente en condiciones de continuar en el estudio',
             'fechaegreso':'Fecha del Egreso de la UCI',
             'horaegreso':'Hora',
             'condicion_egreso':'Condición de egreso de UCI',
             'dx_egreso':'Dx de egreso',
             'causa_mortalidad':'Causa de mortalidad',
             'fechamortalidad':'Fecha',
             'horamortalidad':'Hora',
             'apertura_ocular_e':'Apertura ocular',
             'respuesta_motora_e':'Respuesta motora',
             'respuesta_verbal_e':'Respuesta verbal',
             'glasgowtotal_e':'Glasgow Total',

        }
        widgets = {
            'fechauci': forms.TextInput(attrs={'class': 'form-control', 'placeholder': ('')}),
            'horauci': forms.TextInput(attrs={'class': 'form-control', 'placeholder': ('Formato 24 horas')}),
            'apertura_ocular' :forms.RadioSelect(),
            'respuesta_motora':forms.RadioSelect(),
            'respuesta_verbal':forms.RadioSelect(),


            'fallaorganica_cual': forms.TextInput(attrs={'class': 'form-control', 'placeholder': ('Si hubo falla')}),
            'horaegreso': forms.TextInput(attrs={'class': 'form-control', 'placeholder': ('Formato 24 horas')}),
            'condicion_egreso': forms.RadioSelect(),
            'dx_egreso': forms.TextInput(attrs={'class': 'form-control', 'autocomplete' :"off", 'placeholder': ('')}),
            'causa_mortalidad': forms.TextInput(attrs={'class': 'form-control', 'autocomplete' :"off", 'placeholder': ('')}),
            'horamortalidad': forms.TextInput(attrs={'class': 'form-control', 'placeholder': ('Formato 24 horas')}),
            'apertura_ocular_e': forms.RadioSelect(),
            'respuesta_motora_e': forms.RadioSelect(),
            'respuesta_verbal_e': forms.RadioSelect(),

        }


class NeurologiaForm(forms.ModelForm):
    class Meta:
        model = Neurologia

        fields = [
            'fechaneuro',
            'neurologo',
            'auditiva',
            'motora',
            'comunicacion',
            'visual',
            'verbal',
            'alerta',
            'total1',
            'aperturaocular',
            'respuestamotora',
            'reflejos',
            'respiracion',
            'total2',
            'estadoconciencia',
            'epileptico',
            'fechaeeg',
            'resultadoeeg',


        ]

        labels = {
            'fechaneuro': "Fecha evaluación neurológica",
            'neurologo': "Neurólogo / Profesional Responsable",
            'total1':"Total",
            'total2': "Total",
            'estadoconciencia': "Dx Estado de conciencia",
            'epileptico':"Sospecha de estatus epiléptico no convulsivo",
            'fechaeeg':"Toma EEG",
            'resultadoeeg':"Resultado EEG",

        }
        widgets = {
            'fechaneuro': forms.TextInput(attrs={'class': 'form-control', 'placeholder': ('')}),
            'neurologo': forms.Select(attrs={'class': 'form-control'}),
            'auditiva':forms.RadioSelect(),
            'motora':forms.RadioSelect(),
            'comunicacion':forms.RadioSelect(),
            'visual': forms.RadioSelect(),
            'verbal': forms.RadioSelect(),
            'alerta': forms.RadioSelect(),
            'total1': forms.TextInput(attrs={'class': 'form-control', 'placeholder': ('Suma')}),
            'aperturaocular': forms.RadioSelect(),
            'respuestamotora': forms.RadioSelect(),
            'reflejos': forms.RadioSelect(),
            'respiracion': forms.RadioSelect(),
            'total2': forms.TextInput(attrs={'class': 'form-control', 'placeholder': ('Suma')}),
            'estadoconciencia': forms.RadioSelect(),
            'epileptico': forms.Select(attrs={'class': 'form-control'}),
            'fechaeeg': forms.TextInput(attrs={'class': 'form-control', 'placeholder': ('')}),
            'resultadoeeg':forms.TextInput(attrs={'class': 'form-control', 'autocomplete' :"off", 'placeholder': ('')}),
        }


class BoldForm(forms.ModelForm):
    class Meta:
        model = Bold

        fields = [
            'fechaimg',
            'axt2prop',
            'axt2prop1',
            'axt2prop2',
            'axt2prop3',
            'axt2prop4',
            'axt2prop5',
            'difussion',
            'difussion1',
            'difussion2',
            'difussion3',
            'difussion4',
            'difussion5',
            'difussion6',
            'difussion7',
            'resting',
            'resting1',
            'resting2',
            'resting3',
            'resting4',
            'resting5',
            'resting6',
            'resting7',
            'resting8',
            'obl',
            'obl1',
            'obl2',
            'obl3',
            'obl4',
            'obl5',
            'obl6',
            'flair',
            'flair1',
            'flair2',
            'flair3',
            'flair4',
            'flair5',
            'flair6',
            'flair7',
            'cal',
            'cal1',
            'cal2',
            'cal3',
            'cal4',
            'cal5',
            'swi',
            'swi1',
            'swi2',
            'swi3',
            'swi4',
            'swi5',
            'swi6',
            'swi7',
            'swi8',
            'tensor',
            'tensor1',
            'tensor2',
            'tensor3',
            'tensor4',
            'tensor5',
            'tensor6',
            'tensor7',
            'tensor8',
            't1A',
            't1G',
            't1M',
            't2A',
            't2M',
            'flairA',
            'flairM',
            'difusionA',
            'difusionM',
            'tensorA',
            'tensord',
            'tensorG',
            'tensorM',
            'difussionA',
            'difussionM',
            'restingA',
            'restingV',
            'restingG',
            'restingT',
            'restingM',
            'cd',
            'responsable',




        ]

        labels = {
            'fechaimg': "Fecha de captura de imágenes",
            'axt2prop':"AX T2 Prop",
            'axt2prop1': "Plane: Oblique",
            'axt2prop2': "FOV 22.0cm",
            'axt2prop3': "Slice Thickness 6.0mm",
            'axt2prop4': "Slice Spacing 1.0mm",
            'axt2prop5': "TR 6000ms",
            'difussion':"DIFUSSION",
            'difussion1':"Scan plane: Oblique",
            'difussion2':"FOV 22.0",
            'difussion3':"Slice Thickness 6.0mm",
            'difussion4':"Spacing 1.0mm",
            'difussion5':"Freq Dir: R/L",
            'difussion6':"TR 6000ms",
            'difussion7':"Minimum TR 1000.0",
            'resting': "RESTING",
            'resting1': "Scan plane: Axial",
            'resting2': "FOV 28.8",
            'resting3': "Phase FOV 1.00",
            'resting4': "Slice Thickness 4.5mm",
            'resting5': "Spacing 0.0mm",
            'resting6': "Freq Dir: R/L",
            'resting7': "TR 3000ms",
            'resting8': "Minimum TR 89.0",
            'obl': "3D AX Obl T1",
            'obl1': "Scan plane: Axial",
            'obl2': "FOV 25.0",
            'obl3': "Phase FOV 0.90",
            'obl4': "Slice Thickness 2.0mm",
            'obl5': "Freq Dir: A/P",
            'obl6': "Minimum TR 6.7",
            'flair': "AX FLAIR",
            'flair1': "Scan plane: Oblique",
            'flair2': "FOV 22.0",
            'flair3': "Slice Thickness 6.0mm",
            'flair4': "Spacing 1.0mm",
            'flair5': "Freq Dir: Unswap",
            'flair6': "TR 9000ms",
            'flair7': "Minimum TR 5000.0",
            'cal': "ASSET Cal",
            'cal1': "Scan plane: Axial",
            'cal2': "FOV 30.0",
            'cal3': "Slice Thickness 6.0mm",
            'cal4': "Freq Dir: A/P",
            'cal5': "Minimum TR 150.0",
            'swi': "AXIAL SWI",
            'swi1': "Scan plane: Oblique",
            'swi2': "FOV 22.0",
            'swi3': "Phase FOV 1.00",
            'swi4': "Slice Thickness 6.0mm",
            'swi5': "Spacing 1.0mm",
            'swi6': "Freq Dir: Unswap",
            'swi7': "TR 4375ms",
            'swi8': "Minimum TR 394.0",
            'tensor': "TENSOR AXI",
            'tensor1': "Scan plane: Axial",
            'tensor2': "FOV 25.0",
            'tensor3': "Phase FOV 1.00",
            'tensor4': "Slice Thickness 2.5mm",
            'tensor5': "Spacing 0.0mm",
            'tensor6': "Freq Dir: R/L",
            'tensor7': "TR 17000ms",
            'tensor8': "Minimum TR 1000",
            't1A':"Axial",
            't1G':"Grosor 2mm",
            't1M':"Movimiento",
            't2A':"Axial",
            't2M':"Movimiento",
            'flairA':"Axial",
            'flairM':"Movimiento",
            'difusionA':"Axial",
            'difusionM':"Movimiento",
            'tensorA':"Axial",
            'tensord':"30 direcciones",
            'tensorG':"Grosor 2.5mm",
            'tensorM':"Movimiento",
            'difussionA':"Axial",
            'difussionM':"Movimiento",
            'restingA':"Axial",
            'restingV':"180 volúmenes",
            'restingG':"Grosor 4.5mm",
            'restingT':"TR 3000ms",
            'restingM':"Movimiento",
            'cd':"Captura en CD",
            'responsable':"Responsable:",


        }
        widgets = {
            't1A':forms.Select(choices=[(True, 'Sí'), (False, 'No')]),
            't1G': forms.Select(choices=[(True, 'Sí'), (False, 'No')]),
            't1M': forms.Select(choices=[(True, 'Sí'), (False, 'No')]),
            't2A': forms.Select(choices=[(True, 'Sí'), (False, 'No')]),
            't2M': forms.Select(choices=[(True, 'Sí'), (False, 'No')]),
            'flairA': forms.Select(choices=[(True, 'Sí'), (False, 'No')]),
            'flairM': forms.Select(choices=[(True, 'Sí'), (False, 'No')]),
            'difusionA': forms.Select(choices=[(True, 'Sí'), (False, 'No')]),
            'difusionM': forms.Select(choices=[(True, 'Sí'), (False, 'No')]),
            'tensorA': forms.Select(choices=[(True, 'Sí'), (False, 'No')]),
            'tensord': forms.Select(choices=[(True, 'Sí'), (False, 'No')]),
            'tensorG': forms.Select(choices=[(True, 'Sí'), (False, 'No')]),
            'tensorM': forms.Select(choices=[(True, 'Sí'), (False, 'No')]),
            'difussionA': forms.Select(choices=[(True, 'Sí'), (False, 'No')]),
            'difussionM': forms.Select(choices=[(True, 'Sí'), (False, 'No')]),
            'restingA': forms.Select(choices=[(True, 'Sí'), (False, 'No')]),
            'restingV': forms.Select(choices=[(True, 'Sí'), (False, 'No')]),
            'restingG': forms.Select(choices=[(True, 'Sí'), (False, 'No')]),
            'restingT': forms.Select(choices=[(True, 'Sí'), (False, 'No')]),
            'restingM': forms.Select(choices=[(True, 'Sí'), (False, 'No')]),
            'cd': forms.Select(choices=[(True, 'Sí'), (False, 'No')]),
            'responsable': forms.Select(attrs={'class': 'form-control'}),

        }

class MayorForm(forms.ModelForm):

    class Meta:
        model = Mayor
        fields = [
            'fechaentrevista',
            'neuropsicologa',
            'informante',
            'parentezco',
            'confiable',
            'cambio1',
            'cambio2',
            'cambio3',
            'cambio4',
            'cambio5',
            'cambio6',
            'cambio7',
            'cambio8',
            'cambio9',
            'cambio10',
            'cambio11',
            'cambio12',
            'cambio13',
            'cambio14',
            'cambio15',
            'cambio16',
            'cambio17',
            'cambio18',
            'cambio19',
            'cambio20',
            'cambio21',
            'cambio22',
            'cambio23',
            'cambio24',
            'cambio25',
            'cambio26',
            'total',
            'resultado',
            'severidadgds',
            'dxdemencia',
            'tiempo',

                  ]
        labels = {
            'fechaentrevista': "Fecha de entrevista clínica",
            'neuropsicologa': "Neuropsicóloga",
            'informante': "Informante",
            'parentezco': "Parentezco",
            'confiable': "Confiable",
            'cambio1':"1. Reconocer las caras de las personas más intimas (parientes, amigos)",
            'cambio2':"2. Recordar los nombres de esas mismas personas",
            'cambio3': "3. Recordar las cosas de esas personas (dónde o de qué viven, su cumpleaños,etc.)",
            'cambio4': "4. Recordar cosas sucedidas en los últimos meses (noticias, sucesos familiares)",
            'cambio5': "5. Recordar lo que se habló en una conversación mantenida unos dias antes",
            'cambio6': "6. Mantener una conversación sin olvidar lo que dijo pocos minutos antes, o sin pararse en medio de una frase, o sin olvidar lo que quería decir",
            'cambio7': "7. Recordar su propia dirección ó su número de teléfono",
            'cambio8': "8. Recordar la fecha en que vive",
            'cambio9': "9. Conocer el sitio de los armarios de su casa y dónde se guardan las cosas",
            'cambio10': "10. Saber dónde se encuentra una cosa que se dejó descolocada",
            'cambio11': "11. Adaptarse a la situación cuando la rutina diaria se ve alterada (visitas, celebraciones, vacaciones, etc.)",
            'cambio12': "12. Manejar los aparatos de la casa (Tfno., coche, lavadora, máquina de afeitar)",
            'cambio13': "13. Aprender a manejar un aparato nuevo (lavadora, secador, tocadiscos, coche)",
            'cambio14': "14. Recordar las cosas sucedidas recientemente",
            'cambio15': "15. Aprender cosas nuevas en general",
            'cambio16': "16. Recordar cosas que ocurrieron o que aprendió cuando era joven",
            'cambio17': "17. Comprender el significado de palabras poco corrientes (prensa, TV,etc.)",
            'cambio18': "18. Entender artículos de periódicos o revistas en los que está interesado",
            'cambio19': "19. Seguir una historia en un libro, el cine, la radio o la televisión",
            'cambio20': "20. Redactar cartas a parientes o amigos, o cartas de negocios",
            'cambio21': "21. Recordar personas y hechos históricos (guerras, cambios políticos, líderes)",
            'cambio22': "22. Tomar decisiones en cuestiones cotidianas (elegir vestido o comida) o de más trascendencia (vacaciones, inversiones, compras, etc.)",
            'cambio23': "23. Manejar los asuntos financieros (pensión, bancos, impuestos, rentas, etc.)",
            'cambio24': "24. Manejar el dinero para la compra (precios, cantidades, cambio)",
            'cambio25': "25. Resolver problemas aritméticos cotidianos (tiempos, cantidades, distancias)",
            'cambio26': "26. ¿Cree que su inteligencia ha cambiado algo durante los últimos 5 años?",
            'total': "Total",
            'resultado':"Resultado",
            'severidadgds':"Severidad GDS",
            'dxdemencia':"Dx Demencia",
            'tiempo':"Tiempo de evolución",


        }
        widgets = {
            'neuropsicologa': forms.Select(attrs={'class': 'form-control'}),
            'confiable': forms.Select(attrs={'class': 'form-control'}),

            'severidadgds': forms.Select(attrs={'class': 'form-control'}),
            'dxdemencia': forms.Select(attrs={'class': 'form-control'}),
            'tiempo':forms.TextInput(attrs={'class': 'form-control', 'autocomplete' :"off"}),
        }

class InformanteForm(forms.ModelForm):

    class Meta:
        model = Informante
        fields = [
            'fechaentrevista',
            'neuropsicologa',
            'informante',
            'parentezco',
            'confiable',
            'totalindependencia',
            'telefono',
            'compras',
            'comida',
            'casa',
            'ropa',
            'transporte',
            'medicacion',
            'finanzas',
            'memoria1',
            'memoria2',
            'memoria3',
            'memoria4',
            'memoria5',
            'memoria6',
            'memoria7',
            'memoria8',
            'memoria9',
            'memoria10',
            'memoria11',
            'memoria12',
            'memoria13',
            'memoria14',
            'memoria15',
            'totalmemoria',
            'frontal1',
            'frontal2',
            'frontal3',
            'frontal4',
            'frontal5',
            'frontal6',
            'frontal7',
            'frontal8',
            'frontal9',
            'frontal10',
            'frontal11',
            'frontal12',
            'frontal13',
            'frontal14',
            'frontal15',
            'frontal16',
            'frontal17',
            'frontal18',
            'frontal19',
            'frontal20',
            'frontal21',
            'frontal22',
            'frontal23',
            'frontal24',
            'frontal25',
            'frontal26',
            'frontal27',
            'frontal28',
            'frontal29',
            'frontal30',
            'frontal31',
            'frontal32',
            'frontal33',
            'frontal34',
            'frontal35',
            'frontal36',
            'frontal37',
            'frontal38',
            'frontal39',
            'frontal40',
            'frontal41',
            'frontal42',
            'frontal43',
            'frontal44',
            'frontal45',
            'frontal46',
            'totalapatia',
            'totaldes',
            'totalfunciones',

        ]
        labels = {
            'fechaentrevista': "Fecha de entrevista clínica",
            'neuropsicologa': "Neuropsicóloga",
            'informante': "Informante",
            'parentezco': "Parentezco",
            'confiable': "Confiable",
            'totalindependencia':"Total",
            'memoria1':"1. ¿Tiene dificultad para recordar eventos de la actualidad reciente?",
            'memoria2': "2. ¿Tiene dificultad para seguir una película, emisión de TV o libro?",
            'memoria3': "3. ¿Le ha sucedido que entre a una pieza y olvide lo que venía a buscar?",
            'memoria4': "4. ¿Olvida hacer cosas importantes que había previsto o debía hacer?",
            'memoria5': "5. ¿Tiene dificultad para recordar números de teléfonos conocidos?",
            'memoria6': "6. ¿Olvida con frecuencia el nombre o apellido de personas conocidas?",
            'memoria7': "7. ¿Se ha perdido en lugares familiares?",
            'memoria8': "8. ¿Tiene dificultad para hallar objetos dejados en sus lugares habituales?",
            'memoria9': "9. ¿Le ha sucedido que olvide apagar la estufa, cerrar con llave, etc.?",
            'memoria10': "10. ¿Repite varias veces lo mismo, porque olvida haberlo dicho?",
            'memoria11': "11. ¿Tiene dificultad para encontrar nombres de personas o lugares?",
            'memoria12': "12. ¿Tiene dificultad para aprender cosas nuevas?",
            'memoria13': "13. ¿Necesita anotar todo?",
            'memoria14': "14. ¿Se le pierden las cosas?",
            'memoria15': "15. ¿Olvida inmediatamente lo que le acaban de decir?",
            'totalmemoria': "Total",
            'frontal1':"* Habla únicamente cuando le hablan",
            'frontal2': "ç Se irrita facilmente",
            'frontal3': "{ Repite ciertas acciones o se queda fijo/a en ciertas ideas",
            'frontal4': "ç Hace cosas de manera impulsiva",
            'frontal5': "{ Mezcla la secuencia de las cosas, se confunde haciendo varias cosas",
            'frontal6': "ç Rie o llora muy fácilmente",
            'frontal7': "{ Comete los mismos errores una y otra vez, no aprende de la experiencia",
            'frontal8': "* Tiene dificultad para iniciar una actividad, falta de iniciativa o motivación",
            'frontal9': "ç Hace comentarios sexuales inapropiados",
            'frontal10': "ç Dice o hace cosas inadecuadas",
            'frontal11': "* Descuida su higiene personal",
            'frontal12': "ç No se puede quedar quieto/a. Es hiperactivo/a",
            'frontal13': "{ No se da cuenta de sus problemas o de los errores",
            'frontal14': "* Se sienta sin hacer nada",
            'frontal15': "{ Es desorganizado/a",
            'frontal16': "* Pierde control de sus esfinteres y no parece molestarse",
            'frontal17': "{ No puede hacer dos cosas al tiempo (hablar y cocinar por ejemplo)",
            'frontal18': "ç Interrumpe otros en las conversaciones",
            'frontal19': "{ Muestra poco juicio, poca capacidad de solucionar problemas",
            'frontal20': "{ Inventa historias fantasticas cuando no puede recordar algo",
            'frontal21': "* Ha perdido interes en actividades que eran divertidas y/o importantes",
            'frontal22': "{ Dice una cosa y luego se contradice",
            'frontal23': "* Inicia una actividad, pero la abandona",
            'frontal24': "* Muestra poca emocion o interes",
            'frontal25': "{ Olvida hacer las cosas, pero luego las recuerda",
            'frontal26': "{ Es inflexible, no puede cambiar rutinas",
            'frontal27': "ç Se pone en problemas con las autoridades o la policia",
            'frontal28': "ç Hace cosas riesgosas solo por placer",
            'frontal29': "* Esta lento/a, con falta energia",
            'frontal30': "ç Tiene un sentido del humor infantil",
            'frontal31': "ç Siente que la comida no tiene saber ni olor",
            'frontal32': "ç Dice grocerias",
            'frontal33': "{ Pide disculpas cuando se comporta mal",
            'frontal34': "{ Pone atencion, se concetra cuando hay distracciones",
            'frontal35': "{ Piensa bien las cosas antes de actuar",
            'frontal36': "{ Utiliza estrategias para recordar cosas importantes",
            'frontal37': "{ Puede planear cosas futuras",
            'frontal38': "* Esta interesado/a en el sexo",
            'frontal39': "* Se preocupa por su presentación personal",
            'frontal40': "{ Se beneficia de las criticas, las acepta",
            'frontal41': "* Se involucra espontaneamente en actividades",
            'frontal42': "* Hace las cosas sin que se las tengan que ordenar",
            'frontal43': "ç Es sensible a las necesidades de los demas",
            'frontal44': "ç Se lleva bien con otros",
            'frontal45': "ç Actua apropiadamente para su edad",
            'frontal46': "* Puede inciar facilmente las conversaciones",
        }
        widgets = {
            'neuropsicologa': forms.Select(attrs={'class': 'form-control'}),
            'confiable': forms.Select(attrs={'class': 'form-control'}),
            'totalindependencia': forms.TextInput(attrs={'class': 'form-control'}),
            'telefono':forms.Select(),
            'compras':forms.Select(),
            'comida':forms.Select(),
            'casa':forms.Select(),
            'ropa':forms.Select(),
            'transporte':forms.Select(),
            'medicacion':forms.Select(),
            'finanzas':forms.Select(),
        }

class SeguimientoForm(forms.ModelForm):

    class Meta:
        model = Seguimiento

        fields = [
            'fechaseguimiento',
            'medico_responsable',
            'apertura_ocular',
            'respuesta_motora',
            'respuesta_verbal',
            'glasgowtotal',
            'fallaorganica',
            'fallaorganica_cual',
            'infeccion',
            'infeccion_foco',
            'parada',
            'parada_tiempo',
            'pic',
            'pic_numero',
            'ventilacion',
            'soporte',
            'soporte_cual',
            'neuroimagen',
            'neurologia',
            'midazolam',
            'dexmedeto',
            'fentanyl',
            'tiopental',
            'vecuronio',


        ]

        labels = {
            'fechaseguimiento': "Fecha",
            'medico_responsable': "Responsable",
            'apertura_ocular':"Apertura ocular",
            'respuesta_motora':"Respuesta motora",
            'respuesta_verbal':"Respuesta verbal",
            'glasgowtotal':"Glasgow total",
            'fallaorganica': 'Falla orgánica',
            'fallaorganica_cual':'Cuál',
            'infeccion': 'Nueva infección',
            'infeccion_foco': 'Foco',
            'parada':'Parada cardíaca',
            'parada_tiempo':'Tiempo (minutos)',
            'pic':'Monitoría PIC',
            'pic_numero':'#',
            'ventilacion':'Ventilación mecánica',
            'soporte':'Soporte vasopresor',
            'soporte_cual':'Cuál',
            'neuroimagen':'Neuroimagen',
            'neurologia':'Neurología',
            'midazolam':'Midazolam dosis/dia',
            'dexmedeto':'Dexmedeto dosis/dia',
            'fentanyl':'Fentanyl dosis/dia',
            'tiopental':'Tiopental dosis/dia',
            'vecuronio':'Vecuronio dosis/dia',

        }
        widgets = {
            'fechaseguimiento': forms.TextInput(attrs={'class': 'form-control', 'placeholder': ('')}),
            'medico_responsable': forms.Select(attrs={'class': 'form-control'}),
            'apertura_ocular' :forms.RadioSelect(),
            'respuesta_motora':forms.RadioSelect(),
            'respuesta_verbal':forms.RadioSelect(),


        }

class MocaForm(forms.ModelForm):

    class Meta:
        model = Moca

        fields = [
            'fecha',
            'funcion_visoespacial',
            'identificacion',
            'atencion_numero',
            'atencion_letras',
            'atencion_resta',
            'lenguaje_repite',
            'lenguaje_fluidez',
            'abstraccion',
            'recuerdo',
            'orientacion',
            'total',

        ]

        labels = {
            'fecha':"Fecha",
            'funcion_visoespacial':'Función visoespacial',
            'identificacion':'Identificación',
            'atencion_numero':'Número',
            'atencion_letras':'Letras',
            'atencion_resta':'Resta',
            'lenguaje_repite':'Repite',
            'lenguaje_fluidez':'Fluidez',
            'abstraccion':'Abstracción',
            'recuerdo':'Recuerdo Diferido',
            'orientacion':'Orientación',
            'total':'Total',

        }
        widgets = {
            'fecha': forms.TextInput(attrs={'class': 'form-control', 'placeholder': ('')}),
            'funcion_visoespacial': forms.TextInput(attrs={'class': 'form-control', 'size' : '4','placeholder': ('valor entre 0 y 5'),'oninput':"this.value = this.value.replace(/[^0-5]/, '')"}),
            'identificacion': forms.TextInput(attrs={'class': 'form-control', 'placeholder': ('valor entre 0 y 3'),'oninput': "this.value = this.value.replace(/[^0-3]/, '')"}),
            'atencion_numero': forms.TextInput(attrs={'class': 'form-control', 'placeholder': ('valor entre 0 y 2'),'oninput': "this.value = this.value.replace(/[^0-2]/, '')"}),
            'atencion_letras': forms.TextInput(attrs={'class': 'form-control', 'placeholder': ('valor entre 0 y 1'),'oninput': "this.value = this.value.replace(/[^0-1]/, '')"}),
            'atencion_resta': forms.TextInput(attrs={'class': 'form-control', 'placeholder': ('valor entre 0 y 3'),'oninput': "this.value = this.value.replace(/[^0-3]/, '')"}),
            'lenguaje_repite': forms.TextInput(attrs={'class': 'form-control', 'placeholder': ('valor entre 0 y 2'),'oninput': "this.value = this.value.replace(/[^0-2]/, '')"}),
            'lenguaje_fluidez': forms.TextInput(attrs={'class': 'form-control', 'placeholder': ('valor entre 0 y 1'),'oninput': "this.value = this.value.replace(/[^0-1]/, '')"}),
            'abstraccion': forms.TextInput(attrs={'class': 'form-control', 'placeholder': ('valor entre 0 y 2'),'oninput': "this.value = this.value.replace(/[^0-2]/, '')"}),
            'recuerdo': forms.TextInput(attrs={'class': 'form-control', 'placeholder': ('valor entre 0 y 5'),'oninput': "this.value = this.value.replace(/[^0-5]/, '')"}),
            'orientacion': forms.TextInput(attrs={'class': 'form-control', 'placeholder': ('valor entre 0 y 6'),'oninput': "this.value = this.value.replace(/[^0-6]/, '')"}),

        }



class ControlForm(forms.ModelForm):

    class Meta:
        model = Control

        fields = [
            'fecha',
            'fecha_nacimiento',
            'sexo',
            'funcion_visoespacial',
            'identificacion',
            'atencion_numero',
            'atencion_letras',
            'atencion_resta',
            'lenguaje_repite',
            'lenguaje_fluidez',
            'abstraccion',
            'recuerdo',
            'orientacion',
            'total',

        ]

        labels = {
            'fecha':"Fecha",
            'fecha_nacimiento':'Fecha de Nacimiento',
            'sexo':'Sexo',
            'funcion_visoespacial':'Función visoespacial',
            'identificacion':'Identificación',
            'atencion_numero':'Número',
            'atencion_letras':'Letras',
            'atencion_resta':'Resta',
            'lenguaje_repite':'Repite',
            'lenguaje_fluidez':'Fluidez',
            'abstraccion':'Abstracción',
            'recuerdo':'Recuerdo Diferido',
            'orientacion':'Orientación',
            'total':'Total',

        }
        widgets = {
            'fecha': forms.TextInput(attrs={'class': 'form-control', 'placeholder': ('')}),
            'fecha_nacimiento': forms.TextInput(attrs={'class': 'form-control', 'placeholder': ('')}),
            'sexo': forms.Select(attrs={'class': 'form-control'}),
            'funcion_visoespacial': forms.TextInput(attrs={'class': 'form-control', 'size' : '4','placeholder': ('valor entre 0 y 5'),'oninput':"this.value = this.value.replace(/[^0-5]/, '')"}),
            'identificacion': forms.TextInput(attrs={'class': 'form-control', 'placeholder': ('valor entre 0 y 3'),'oninput': "this.value = this.value.replace(/[^0-3]/, '')"}),
            'atencion_numero': forms.TextInput(attrs={'class': 'form-control', 'placeholder': ('valor entre 0 y 2'),'oninput': "this.value = this.value.replace(/[^0-2]/, '')"}),
            'atencion_letras': forms.TextInput(attrs={'class': 'form-control', 'placeholder': ('valor entre 0 y 1'),'oninput': "this.value = this.value.replace(/[^0-1]/, '')"}),
            'atencion_resta': forms.TextInput(attrs={'class': 'form-control', 'placeholder': ('valor entre 0 y 3'),'oninput': "this.value = this.value.replace(/[^0-3]/, '')"}),
            'lenguaje_repite': forms.TextInput(attrs={'class': 'form-control', 'placeholder': ('valor entre 0 y 2'),'oninput': "this.value = this.value.replace(/[^0-2]/, '')"}),
            'lenguaje_fluidez': forms.TextInput(attrs={'class': 'form-control', 'placeholder': ('valor entre 0 y 1'),'oninput': "this.value = this.value.replace(/[^0-1]/, '')"}),
            'abstraccion': forms.TextInput(attrs={'class': 'form-control', 'placeholder': ('valor entre 0 y 2'),'oninput': "this.value = this.value.replace(/[^0-2]/, '')"}),
            'recuerdo': forms.TextInput(attrs={'class': 'form-control', 'placeholder': ('valor entre 0 y 5'),'oninput': "this.value = this.value.replace(/[^0-5]/, '')"}),
            'orientacion': forms.TextInput(attrs={'class': 'form-control', 'placeholder': ('valor entre 0 y 6'),'oninput': "this.value = this.value.replace(/[^0-6]/, '')"}),

        }


